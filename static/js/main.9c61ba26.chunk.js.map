{"version":3,"sources":["actions.js","Login.jsx","Home.jsx","Singup.jsx","App.jsx","serviceWorker.js","reducers.js","index.jsx"],"names":["auth","type","actionCreators","actions","addUser","values","dispatch","a","axios","post","user","response","console","log","payload","name","data","username","LoginContainerComponent","withRouter","props","formik","useFormik","initialValues","email","password","remember","onSubmit","setTimeout","history","replace","className","handleSubmit","prefix","UserOutlined","placeholder","value","onChange","handleChange","LockOutlined","errorMsg","htmlType","to","errors","loginError","connect","state","isAuth","Header","styled","header","Title","h1","Avatar","div","Circle","Romb","Container","Button","button","userName","onClick","Signup","setErrors","then","catch","error","label","Password","PrivateRoute","Component","component","store","rest","render","basename","exact","path","Home","Login","Boolean","window","location","hostname","match","combineReducers","action","devTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9c61ba26.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const auth = () => ({\n  type: 'AUTENTICATE',\n});\n\nexport const addErrorMsg = () => ({\n  type: 'ADD_MESSAGE',\n});\n\nexport const addUserName = (username) => ({\n  type: 'ADD_USERNAME',\n  payload: {\n    name: username,\n  },\n});\n\nexport const addUser = (values) => async (dispatch) => {\n  try {\n    const response = await axios.post('https://conduit.productionready.io/api/users/login', { user: values });\n    console.log(response);\n    dispatch(addUserName(response.data.user.username));\n    dispatch(auth());\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch(addErrorMsg());\n  }\n};\n","import React from 'react';\nimport { Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport * as actions from './actions';\n\nconst actionCreators = {\n  auth: actions.auth,\n  addUser: actions.addUser,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.isAuth,\n  errorMsg: state.errorMsg,\n});\n\nconst Login = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      remember: false,\n    },\n    onSubmit: (values) => {\n      props.addUser(values);\n      setTimeout(() => props.history.replace('/'), 1000);\n    },\n  });\n\n  return (\n    <form\n      name=\"normal_login\"\n      className=\"form\"\n      onSubmit={formik.handleSubmit}\n    >\n      <Input\n        className=\"margin-bottom\"\n        name=\"email\"\n        prefix={<UserOutlined className=\"site-form-item-icon\" />}\n        placeholder=\"E-mail\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n      />\n      <div className=\"margin-bottom\">\n        <Input\n          name=\"password\"\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n        />\n        {props.errorMsg && (<div className=\"error\">{props.errorMsg}</div>)}\n      </div>\n      <Button type=\"primary\" htmlType=\"submit\" className=\"left-margin\">\n        Войти\n      </Button>\n      <Link to=\"/signup\" className=\"left-margin\">Регистрация!</Link>\n      {formik.errors.loginError && <div>email or password is invalid</div>}\n    </form>\n  );\n};\n\nconst LoginContainerComponent = withRouter(Login);\n\nexport default connect(mapStateToProps, actionCreators)(LoginContainerComponent);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as actions from './actions';\n\nconst Header = styled.header`\n  padding: 40px 0;\n  background-color: lightseagreen;\n  width: 100%;\n  color: #fff;\n  margin-bottom: 30px;\n`;\n\nconst Title = styled.h1`\n  color: #fff;\n  font-size: 50px;\n`;\n\nconst Avatar = styled.div`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  padding: 10px;\n  background-color: #ddd;\n  overflow: hidden;\n`;\n\nconst Circle = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: #fff;\n  margin: 0 auto;\n`;\n\nconst Romb = styled.div`\n  width: 200px;\n  height: 150px;\n  background: #fff;\n  margin: 0 auto;\n  border-radius: 50%;\n  margin-top: 10px;\n  background: #fff;\n`;\n\nconst Container = styled.div`\n  width: 65%;\n  margin: 0 auto;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: 1px solid #fff;\n  border-radius: 3px;\n  align-self: flex-start;\n  cursor: pointer;\n`;\n\nconst actionCreators = {\n  auth: actions.auth,\n};\n\nconst mapStateToProps = (state) => ({\n  userName: state.userName,\n});\n\nconst Home = (props) => (\n  <div>\n    <Header>\n      <Container>\n        <Avatar>\n          <Circle />\n          <Romb />\n        </Avatar>\n        <Title>\n          Wellcome,\n          {' '}\n          {props.userName}\n          !\n        </Title>\n        <Button onClick={() => props.auth()}>\n          Выход\n        </Button>\n      </Container>\n    </Header>\n    <Container>\n      <main>\n        <h2 className=\"text-center\">Lorem, ipsum dolor.</h2>\n        <p>\n          Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Quas molestiae dignissimos\n          vel explicabo odio et dolore, amet magni cum\n          fugit pariatur. Impedit sapiente quidem, magnam\n          aliquid libero laborum numquam ullam.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Quas molestiae dignissimos\n          vel explicabo odio et dolore, amet magni cum\n          fugit pariatur. Impedit sapiente quidem, magnam\n          aliquid libero laborum numquam ullam.\n          Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Quas molestiae dignissimos\n          vel explicabo odio et dolore, amet magni cum\n          fugit pariatur. Impedit sapiente quidem, magnam\n          aliquid libero laborum numquam ullam.\n        </p>\n      </main>\n    </Container>\n  </div>\n);\n\nexport default connect(mapStateToProps, actionCreators)(Home);\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Input, Button } from 'antd';\n\nconst Signup = () => {\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { setErrors }) => {\n      console.log({ user: values });\n      axios.post('https://conduit.productionready.io/api/users', { user: values })\n        .then((response) => {\n          console.log(response);\n          // Установить в стейт имя пользователя и Перейти на главную страницу\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n          setErrors(error.response.data.errors);\n        });\n    },\n  });\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n  } = formik;\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"margin-bottom\">\n        <Input\n          name=\"email\"\n          placeholder=\"E-mail\"\n          label=\"E-mail\"\n          type=\"email\"\n          value={values.email}\n          onChange={handleChange}\n        />\n        {errors.email && (<div className=\"error\">{errors.email}</div>)}\n      </div>\n      <div className=\"margin-bottom\">\n        <Input.Password\n          name=\"password\"\n          placeholder=\"Пароль\"\n          label=\"Password\"\n          type=\"password\"\n          value={values.password}\n          onChange={handleChange}\n        />\n        {errors.password && (<div className=\"error\">{errors.password}</div>)}\n      </div>\n      <div className=\"margin-bottom\">\n        <Input\n          placeholder=\"Имя Пользователя\"\n          name=\"username\"\n          label=\"Nickname\"\n          value={values.username}\n          onChange={handleChange}\n        />\n        {errors.username && (<div className=\"error\">{errors.username}</div>)}\n      </div>\n      <Button className=\"left-margin\" type=\"primary\" htmlType=\"submit\">\n        Register\n      </Button>\n      <Link to=\"/login\">Войти</Link>\n    </form>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport Home from './Home';\nimport Signup from './Singup';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.isAuth,\n});\n\nfunction App(props) {\n  console.log(props);\n  return (\n    <Router basename=\"/login-SPA\">\n      <PrivateRoute store={props.isAuth} exact path=\"/\" component={Home} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n    </Router>\n  );\n}\n\nconst PrivateRoute = ({ component: Component, store, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => (store ? (\n      <Component {...props} />\n    ) : (\n      <Redirect to=\"/login\" />\n    ))}\n  />\n);\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\n\nconst isAuth = (state = false, action) => {\n  if (action.type === 'AUTENTICATE') {\n    return !state;\n  }\n  return state;\n};\n\nconst errorMsg = (state = null, action) => {\n  if (action.type === 'ADD_MESSAGE') {\n    return 'Неверный email или пароль';\n  }\n  return state;\n};\n\nconst userName = (state = '', action) => {\n  if (action.type === 'ADD_USERNAME') {\n    return action.payload.name;\n  }\n  return state;\n};\n\nexport default combineReducers({\n  isAuth,\n  userName,\n  errorMsg,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk),\n    devTools,\n  ),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}